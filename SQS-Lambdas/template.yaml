AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  SQS-Lambdas

  Sample SAM Template for SQS-Lambdas

Globals:
  Function:
    Timeout: 30
    Runtime: nodejs12.x

Resources:
  WsMsgQueueLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: WsMsgQueueLambdaFunction
      CodeUri: ws-msg-queue-lambda/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      MemorySize: 192
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            BatchSize: 10
            Enabled: true
            Queue: # ARN of queue
              Fn::Join:
                - ""
                - - "arn:aws:sqs:"
                  - Ref: "AWS::Region"
                  - ":"
                  - Ref: "AWS::AccountId"
                  - ":WsMsgQueue.fifo"

      Policies:
        - AWSLambdaSQSQueueExecutionRole

        - DynamoDBReadPolicy: #only read permission
            TableName: "MyTable"

        - DynamoDBCrudPolicy:
            TableName: "WsTable"

        # this access also include websocket-channel permissions
        - AmazonAPIGatewayInvokeFullAccess

  PostNotificationQueueLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PostNotificationQueueLambdaFunction
      CodeUri: post-notification-lambda/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      MemorySize: 192
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            BatchSize: 100
            Enabled: true
            MaximumBatchingWindowInSeconds: 3 # 3 seconds
            Queue: # ARN of queue
              Fn::Join:
                - ""
                - - "arn:aws:sqs:"
                  - Ref: "AWS::Region"
                  - ":"
                  - Ref: "AWS::AccountId"
                  - ":PostNotificationQueue"

      Policies:
        - AWSLambdaSQSQueueExecutionRole

        - DynamoDBCrudPolicy:
            TableName: "MyTable"

        - AmazonSNSFullAccess
