AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  user-service-functions

  SAM Template

Globals:
  Function:
    Timeout: 30

Resources:
  UserServiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UserServices/
      Handler: handler.handler
      Runtime: nodejs12.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: "MyTable"
        - S3CrudPolicy:
            BucketName: "mootclub-public"

        - AmazonSNSFullAccess

      Events:
        APIRoot:
          Type: Api
          Properties:
            Path: /
            Method: get

        UserList:
          Type: Api
          Properties:
            Path: /users
            Method: get

        CreateUser:
          Type: Api
          Properties:
            Path: /users/create
            Method: post

        GetUserById:
          Type: Api
          Properties:
            Path: /users/{userId}
            Method: get

        UpdateUser:
          Type: Api
          Properties:
            Path: /users/{userId}
            Method: patch

        UploadAvatar:
          Type: Api
          Properties:
            Path: /users/{userId}/avatar
            Method: post

        RegisterUserDeviceToken:
          Type: Api
          Properties:
            Path: /users/{userId}/notifications/device-token
            Method: post

        DeleteUserDeviceToken:
          Type: Api
          Properties:
            Path: /users/{userId}/notifications/device-token
            Method: delete

        GetNotificationList:
          Type: Api
          Properties:
            Path: /users/{userId}/notifications
            Method: get

        NotificationOpenedStatus:
          Type: Api
          Properties:
            Path: /users/{userId}/notifications/opened/{timestamp}
            Method: post

        ListSocialRelatives:
          Type: Api
          Properties:
            Path: /users/{userId}/relations
            Method: get

        AddSocialRelatives:
          Type: Api
          Properties:
            Path: /users/{userId}/relations/add
            Method: post

        RemoveSocialRelatives:
          Type: Api
          Properties:
            Path: /users/{userId}/relations/remove
            Method: post

        CreateStory:
          Type: Api
          Properties:
            Path: /users/{userId}/story
            Method: post

        GetIndividualUserStories:
          Type: Api
          Properties:
            Path: /users/{userId}/story
            Method: get

        GetAllHomepageStories:
          Type: Api
          Properties:
            Path: /users/{userId}/story/home/all
            Method: get

  ClubServiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ClubServices/
      Handler: handler.handler
      Runtime: nodejs12.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: "MyTable"

        - S3CrudPolicy:
            BucketName: "mootclub-public"

      Events:
        AllClubList:
          Type: Api
          Properties:
            Path: /clubs
            Method: get

        UnifiedSearch:
          Type: Api
          Properties:
            Path: /query
            Method: get

        CreateClub:
          Type: Api
          Properties:
            Path: /clubs/create
            Method: post

        MyOrganisedClubs:
          Type: Api
          Properties:
            Path: /myclubs/{userId}/organized
            Method: get

        MyClubHistory:
          Type: Api
          Properties:
            Path: /myclubs/{userId}/history
            Method: get

        GetClubDetails:
          Type: Api
          Properties:
            Path: /clubs/{clubId}
            Method: get

        UploadAvatar:
          Type: Api
          Properties:
            Path: /clubs/{clubId}/avatar
            Method: post

        EnterClub:
          Type: Api
          Properties:
            Path: /clubs/{clubId}/enter
            Method: post

        ReactOnClub:
          Type: Api
          Properties:
            Path: /clubs/{clubId}/reactions
            Method: post

        GetListOfReactorsOnClub:
          Type: Api
          Properties:
            Path: /clubs/{clubId}/reactions
            Method: get

        ReportClub:
          Type: Api
          Properties:
            Path: /clubs/{clubId}/reports
            Method: post

        GetClubReports:
          Type: Api
          Properties:
            Path: /clubs/{clubId}/reports
            Method: get

        RequestToJoinClub:
          Type: Api
          Properties:
            Path: /clubs/{clubId}/join-request
            Method: post

        GetJoiningRequestsForClub:
          Type: Api
          Properties:
            Path: /clubs/{clubId}/join-request
            Method: get

        DeleteJoinRequestByRequester:
          Type: Api
          Properties:
            Path: /clubs/{clubId}/join-request
            Method: delete

        RespondToJoinRequest:
          Type: Api
          Properties:
            Path: /clubs/{clubId}/join-request/response
            Method: post

        GetActiveParticipantsOfClub:
          Type: Api
          Properties:
            Path: /clubs/{clubId}/participants
            Method: get

        KickOutParticipant:
          Type: Api
          Properties:
            Path: /clubs/{clubId}/kick
            Method: post

        GenerateAgoraToken:
          Type: Api
          Properties:
            Path: /clubs/{clubId}/agora/token/create
            Method: post

Outputs:
  UserServiceAPIs:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/"

  UserServiceFunction:
    Description: "User Service  Lambda Function ARN"
    Value: !GetAtt UserServiceFunction.Arn

  UserServiceFunctionIamRole:
    Description: "Implicit IAM Role created for User Service function"
    Value: !GetAtt UserServiceFunction.Arn

  ClubServiceAPIs:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/"

  ClubServiceFunction:
    Description: "Club Service  Lambda Function ARN"
    Value: !GetAtt ClubServiceFunction.Arn

  ClubServiceFunctionIamRole:
    Description: "Implicit IAM Role created for Club Service function"
    Value: !GetAtt ClubServiceFunction.Arn
