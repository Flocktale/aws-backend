AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Creating Queues

Resources:
  WsMsgQueue:
    Type: AWS::SQS::Queue
    Properties:
      ContentBasedDeduplication: false
      DelaySeconds: 0
      FifoQueue: true
      KmsDataKeyReusePeriodSeconds: 86400 # 24 hours, for details
      # KmsMasterKeyId: String    # default will be used (aws managed)
      MaximumMessageSize: 10240 # 10 KB
      MessageRetentionPeriod: 60 # 1 minute
      QueueName: WsMsgQueue.fifo
      ReceiveMessageWaitTimeSeconds: 1 # 1 second, For long polling
      # RedrivePolicy:                    # to attach a dead-letter-queue, this is different DLQ than the one used for fail cases.
      #   deadLetterTargetArn: String
      #   maxReceiveCount: Integer
      # Tags:
      #   - Tag
      VisibilityTimeout: 30 # 30 seconds

  PostNotificationQueue:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 0
      KmsDataKeyReusePeriodSeconds: 86400 # 24 hours, for details
      # KmsMasterKeyId: String    # default will be used (aws managed)
      MaximumMessageSize: 10240 # 10 KB
      MessageRetentionPeriod: 6000 # 100 minutes
      QueueName: PostNotificationQueue
      ReceiveMessageWaitTimeSeconds: 3 # 3 seconds, For long polling
      # Tags:
      # - Tag
      VisibilityTimeout: 100 # 100 seconds

Outputs:
  WsMsgQueueURL:
    Description: "URL of new FIFO SQS Queue for posting websocket messages"
    Value:
      Ref: WsMsgQueue
  WsMsgQueueARN:
    Description: "ARN of new FIFO SQS Queue for posting websocket messages"
    Value:
      Fn::GetAtt:
        - WsMsgQueue
        - Arn

  PostNotificationQueueURL:
    Description: "URL of new Standard SQS Queue for sending notifications"
    Value:
      Ref: PostNotificationQueue

  PostNotificationQueueARN:
    Description: "ARN of new Standard SQS Queue for sending notifications"
    Value:
      Fn::GetAtt:
        - PostNotificationQueue
        - Arn
